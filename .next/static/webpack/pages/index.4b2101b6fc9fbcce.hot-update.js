"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/Layout/Mobile/MobileNavBar.js":
/*!**************************************************!*\
  !*** ./components/Layout/Mobile/MobileNavBar.js ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _NavButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./NavButton */ \"./components/Layout/Mobile/NavButton.js\");\n// flex md:hidden flex-row items-center justify-around px-8 h-12 bg-white visible md:invisible fixed bottom-0 w-full rounded-t-3xl text-2xl\nvar _this = undefined;\n\n\nvar MobileNavBar = function(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"\",\n        children: props.navButtons.map(function(button) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_NavButton__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                path: button.path,\n                label: button.label,\n                icon: button.icon\n            }, button.path, false, {\n                fileName: \"/Users/willvernon/Documents/GitHub/my-portfolio/components/Layout/Mobile/MobileNavBar.js\",\n                lineNumber: 7,\n                columnNumber: 4\n            }, _this);\n        })\n    }, void 0, false, {\n        fileName: \"/Users/willvernon/Documents/GitHub/my-portfolio/components/Layout/Mobile/MobileNavBar.js\",\n        lineNumber: 5,\n        columnNumber: 2\n    }, _this);\n};\n_c = MobileNavBar;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MobileNavBar);\nvar _c;\n$RefreshReg$(_c, \"MobileNavBar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0xheW91dC9Nb2JpbGUvTW9iaWxlTmF2QmFyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSwySUFBMkk7QUFDM0k7O0FBQW9DO0FBRXBDLElBQU1DLFlBQVksR0FBRyxTQUFDQyxLQUFLO3lCQUMxQiw4REFBQ0MsS0FBRztRQUFDQyxTQUFTLEVBQUMsRUFBRTtrQkFDZkYsS0FBSyxDQUFDRyxVQUFVLENBQUNDLEdBQUcsQ0FBQyxTQUFDQyxNQUFNO2lDQUM1Qiw4REFBQ1Asa0RBQVM7Z0JBRVRRLElBQUksRUFBRUQsTUFBTSxDQUFDQyxJQUFJO2dCQUNqQkMsS0FBSyxFQUFFRixNQUFNLENBQUNFLEtBQUs7Z0JBQ25CQyxJQUFJLEVBQUVILE1BQU0sQ0FBQ0csSUFBSTtlQUhaSCxNQUFNLENBQUNDLElBQUk7Ozs7cUJBSWY7U0FDRixDQUFDOzs7OzthQUNHO0NBQ047QUFYS1AsS0FBQUEsWUFBWTtBQWFsQiwrREFBZUEsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvTGF5b3V0L01vYmlsZS9Nb2JpbGVOYXZCYXIuanM/ZjQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmbGV4IG1kOmhpZGRlbiBmbGV4LXJvdyBpdGVtcy1jZW50ZXIganVzdGlmeS1hcm91bmQgcHgtOCBoLTEyIGJnLXdoaXRlIHZpc2libGUgbWQ6aW52aXNpYmxlIGZpeGVkIGJvdHRvbS0wIHctZnVsbCByb3VuZGVkLXQtM3hsIHRleHQtMnhsXG5pbXBvcnQgTmF2QnV0dG9uIGZyb20gJy4vTmF2QnV0dG9uJztcblxuY29uc3QgTW9iaWxlTmF2QmFyID0gKHByb3BzKSA9PiAoXG5cdDxkaXYgY2xhc3NOYW1lPScnPlxuXHRcdHtwcm9wcy5uYXZCdXR0b25zLm1hcCgoYnV0dG9uKSA9PiAoXG5cdFx0XHQ8TmF2QnV0dG9uXG5cdFx0XHRcdGtleT17YnV0dG9uLnBhdGh9XG5cdFx0XHRcdHBhdGg9e2J1dHRvbi5wYXRofVxuXHRcdFx0XHRsYWJlbD17YnV0dG9uLmxhYmVsfVxuXHRcdFx0XHRpY29uPXtidXR0b24uaWNvbn1cblx0XHRcdC8+XG5cdFx0KSl9XG5cdDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgTW9iaWxlTmF2QmFyO1xuIl0sIm5hbWVzIjpbIk5hdkJ1dHRvbiIsIk1vYmlsZU5hdkJhciIsInByb3BzIiwiZGl2IiwiY2xhc3NOYW1lIiwibmF2QnV0dG9ucyIsIm1hcCIsImJ1dHRvbiIsInBhdGgiLCJsYWJlbCIsImljb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/Layout/Mobile/MobileNavBar.js\n"));

/***/ })

});