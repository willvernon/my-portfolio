import { ParticleOptions } from './ParticleImage';
import { TimingFunction } from '../universe/timing';
import { Universe, UniverseState, PixelManager } from '../universe';
import { Dimensions } from '../types';
export interface ImageUniverseSetupResult {
    universe: Universe;
    pixelManagers: PixelManager[];
}
export interface SetupOptions {
    url: string;
    maxParticles: number;
    particleOptions: Required<ParticleOptions>;
    scale: number;
    canvasDimensions: Dimensions;
    creationDuration?: number;
    deathDuration?: number;
    creationTimingFn?: TimingFunction;
    deathTimingFn?: TimingFunction;
    onUniverseStateChange?: (state: UniverseState, universe: Universe) => void;
}
declare const createImageUniverse: ({ url, maxParticles, particleOptions, scale, canvasDimensions, creationTimingFn, deathTimingFn, creationDuration, deathDuration, onUniverseStateChange }: SetupOptions) => Promise<ImageUniverseSetupResult>;
export default createImageUniverse;
