import t,{forwardRef as i,useState as e,useRef as s,useCallback as n,useEffect as o}from"react";const r=32,a=128,h={x:.5,y:.5},c="#2f4acf",l=2*Math.random()-1,u=.1*Math.random()-1,_=.5,d=.1,m=.001,f=.0095,p=.5;class y{points;ctx;_color;_mousePos;_canvas;_points;_radius;_position;_running;_smoothing;_markers;_showMousePosition;_speed;_friction;_elasticity;_acceleration;_radial;constructor(t,i,e,s,n,o,l,p,y,g){this.points=[],this._color=t??c,this._mousePos=h,this._points=i&&i>2?i:r,this._radius=a,this._position=h,this._running=!1,this._smoothing="boolean"!=typeof e||e,this._markers="boolean"==typeof s&&s,this._showMousePosition="boolean"==typeof n&&n,this._speed=o??_,this._friction=l??f,this._elasticity=p??m,this._acceleration=y??u,this._radial=g??d}init(){for(let t=0;t<this.numPoints;t++){let i=new g(this.divisional*(t+1),this);i.acceleration=l,this.push(i)}}render(){let t=this.canvas,i=this.ctx,e=this.points,s=this.numPoints,n=this.center;null!=i&&t&&i.clearRect(0,0,t.width,t.height),e[0].solveWith(e[s-1],e[1]);let o=e[s-1].position,r=e[0].position,a=r;i&&(i.beginPath(),i.moveTo(n.x,n.y),i.moveTo((o.x+r.x)/2,(o.y+r.y)/2));for(let t=1;t<s;t++){e[t].solveWith(e[t-1],e[t+1]||e[0]);let s=e[t].position;var h=(r.x+s.x)/2,c=(r.y+s.y)/2;this.smoothing&&i?.quadraticCurveTo(r.x,r.y,h,c),i&&(this.smoothing||i?.lineTo(s.x,s.y),i.fillStyle=this.color,this.markers&&i.fillRect(r.x-5,r.y-5,10,10)),r=s}h=(r.x+a.x)/2,c=(r.y+a.y)/2;if(i&&(i.fillStyle=this.color,i.fill(),i.strokeStyle=this.color),this.showMousePosition){let t=Math.atan2(this.mousePos.y,this.mousePos.x)+Math.PI;i?.fillRect(n.x+Math.cos(t)*this.radius,n.y+Math.sin(t)*this.radius,10,10)}requestAnimationFrame(this.render.bind(this))}push(t){t instanceof g&&this.points.push(t)}set color(t){this._color=t}get color(){return this._color}set smoothing(t){this._smoothing=t}get smoothing(){return this._smoothing}get friction(){return this._friction}get elasticity(){return this._elasticity}get acceleration(){return this._acceleration}get radial(){return this._radial}set markers(t){this._markers=t}get markers(){return this._markers}get speed(){return this._speed}set showMousePosition(t){this._showMousePosition=t}get showMousePosition(){return this._showMousePosition}set mousePos(t){this._mousePos=t}get mousePos(){return this._mousePos}set canvas(t){t instanceof HTMLElement&&"canvas"===t.tagName.toLowerCase()&&(this._canvas=t,this.ctx=this._canvas.getContext("2d"))}get canvas(){return this._canvas}set numPoints(t){t>2&&(this._points=t)}get numPoints(){return this._points}set radius(t){t>0&&(this._radius=t)}get radius(){return this._radius}set position(t){"object"==typeof t&&t.x&&t.y&&(this._position=t)}get position(){return this._position}get divisional(){return 2*Math.PI/this.numPoints}get center(){return this.canvas?{x:this.canvas.width*this.position.x,y:this.canvas.height*this.position.y}:h}set running(t){this._running=!0===t}get running(){return!1!==this.running}}class g{parent;azimuth;_acceleration;_components;_speed;_radialEffect;_elasticity;_friction;constructor(t,i){this.parent=i,this.azimuth=Math.PI-t,this._components={x:Math.cos(this.azimuth),y:Math.sin(this.azimuth)},this._acceleration=i.acceleration,this._speed=i.speed,this._radialEffect=i.radial,this._elasticity=i.elasticity,this._friction=i.friction}solveWith(t,i){this.acceleration=(-.3*this.radialEffect+(t.radialEffect-this.radialEffect)+(i.radialEffect-this.radialEffect))*this.elasticity-this.speed*this.friction}set acceleration(t){"number"==typeof t&&(this._acceleration=t,this.speed+=2*this._acceleration)}get acceleration(){return this._acceleration}set speed(t){"number"==typeof t&&(this._speed=t,this.radialEffect+=5*this._speed)}get speed(){return this._speed}set radialEffect(t){"number"==typeof t&&(this._radialEffect=t)}get radialEffect(){return this._radialEffect}get position(){return{x:this.parent.center.x+this.components.x*(this.parent.radius+this.radialEffect),y:this.parent.center.y+this.components.y*(this.parent.radius+this.radialEffect)}}get components(){return this._components}set elasticity(t){"number"==typeof t&&(this._elasticity=t)}get elasticity(){return this._elasticity}set friction(t){"number"==typeof t&&(this._friction=t)}get friction(){return this._friction}}const x=i(((i,h)=>{const{color:l=c,radius:g=a,sensitivity:x=p,points:v=r,speed:M=_,smoothing:P=!0,markers:E=!0,showMousePosition:w=!1,friction:b=f,elasticity:k=m,acceleration:z=u,radial:L=d,height:X=window.innerHeight}=i,[Y,T]=e(null),q=s(null),[W]=e({x:0,y:0}),C=n((()=>{q.current&&q.current.parentElement&&(q.current.width=q.current.parentElement.clientWidth,q.current.height=X,Y&&(Y.color=l))}),[Y,l,X]),I=n((()=>{C()}),[C]);o((()=>{C()}),[C]);const R=n((t=>{if(Y){const i=Y.center,e={x:t.clientX-i.x,y:t.clientY-i.y},s=Math.sqrt(e.x*e.x+e.y*e.y);let n=null;if(Y.mousePos={x:i.x-t.clientX,y:i.y-t.clientY},s<Y.radius){const e={x:t.clientX+i.x,y:t.clientY+i.y};n=Math.atan2(e.y,e.x)+Math.random()}else if(s>Y.radius){const e={x:t.clientX-i.x,y:t.clientY-i.y};n=Math.atan2(e.y,e.x)+Math.random()}if("number"==typeof n){let i=null,e=1;if(Y.points.forEach((t=>{n&&Math.abs(n-t.azimuth)<e&&(i=t,e=Math.abs(n-t.azimuth))})),i){let e={x:W.x-t.clientX,y:W.y-t.clientY};e=Math.sqrt(e.x*e.x+e.y*e.y)*x,i.acceleration=e/100}}W.x=t.clientX,W.y=t.clientY}}),[Y,W,x]);return o((()=>{T(new y(l,v,P,E,w,M,b,k,z,L))}),[T]),o((()=>{Y&&q.current&&(Y.canvas=q.current,Y.radius=g,Y.color=l)}),[Y,l,g]),o((()=>{Y?.canvas&&(Y?.init(),Y.render())}),[Y]),o((()=>(window.addEventListener("resize",I),()=>{window.removeEventListener("resize",I)})),[I]),o((()=>(document.addEventListener("mousemove",R),()=>{document.removeEventListener("mousemove",R)})),[R]),t.createElement("canvas",{"touch-action":"none",ref:q,height:X})}));export{x as Blob};
//# sourceMappingURL=index.js.map
